<?php

?>

<p>
The Java code snippet below shows how to make a call using our API. 
</p>

<p>
The code uses our Java gateway class: <strong>AfricasTalkingGateway.java</strong> <span class="download_link">[<a href='/smslibraries/java'><i class="ti-download" ></i>  Download</a>]</span>
</p>

<p>
To help decode JSON responses, you will need to add one of the available JAVA libraries as a dependency.
For this tutorial we chose to use <strong>json-20090211.jar</strong> which you can 
<a href = 'http://mvnrepository.com/artifact/org.json/json/20090211'>download from this repository</a>. 
The  documentation on this library 
<a href='http://www.json.org/javadoc/org/json/package-summary.html'>can be found here</a>. 
</p>

<fieldset class='boxed'>
<legend>Note On SSL Certificate Validation Issues</legend>
<p>
Some of our users have experienced SSL Certificate validation issues when connecting to our website due to our use of
https. The error you see may look something like this:
</p>
<p>
<verbatim>
<strong>Unable to find valid certification path to requested target</strong>
</verbatim>
</p>
<p>
Please do not panic! Our certificate is perfectly valid 
(<a href='http://www.sslshopper.com/ssl-checker.html#hostname=api.africastalking.com'>as evidenced by 
these verification tests</a>), and the error you are seeing is quite common amongst Java clients 
connecting to secure websites. Here is how to fix the issue 
(<a href='https://blogs.oracle.com/gc/entry/unable_to_find_valid_certification'>based on this blog</a>)
</p>
<ul class='lgcircle'>
	<li>Download and compile <strong>InstallCert.java</strong> 
		(<a href='http://code.google.com/p/java-use-examples/source/browse/trunk/src/com/aw/ad/util/InstallCert.java'>you can find the code here</a>).</li>
	<li>Run: java InstallCert api.africastalking.com
		<br>This will download a copy of our Certificate and create a file named <strong>jssecacerts</strong> 
		in the current directory.</li>
	<li>You can now add our Certificate to your trusted store by copying the created <strong>jssecacerts</strong> file to the 
		Java security directory under <strong>$JAVA_HOME/jre/lib/security</strong>
	</li>
</li>
</fieldset>


<fieldset style="width:98%" class='boxed code'>
<pre class="javaCode">
// Make sure the downloaded jar file is in the classpath
import org.json.*;

public class TestCalling
{
    public static void main(String[] args_)
    {
	     // Specify your login credentials
	     String username = "MyAfricasTalking_Username";
	     String apiKey   = "MyAfricasTalking_APIKey";
	
	     // Specify your Africa's Talking phone number in international format
	     String from = "+254711082XYZ";
	
	     // Specify the numbers that you want to call to in a comma-separated list
	     // Please ensure you include the country code (+254 for Kenya in this case)
     	String to   = "+254711XXXYYY,+254733YYYZZZ";
	
	     // Create a new instance of our awesome gateway class
	     AfricasTalkingGateway gateway  = new AfricasTalkingGateway(username, apiKey);
	
	     // Any gateway errors will be captured by our custom Exception class below, 
	     // so wrap the call in a try-catch block
     	try {
	         gateway.call(from, to);
	         System.out.println("Calls have been initiated. Time for song and dance!");
	         // Our API will now contact your callback URL once the recipient answers the call!
     	} 
     	
     	catch (Exception e) {
	         System.out.println("Encountered an error" + e.getMessage());
	    }
	
    }
}
</pre>
</fieldset>