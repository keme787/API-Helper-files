<?php

?>
<h2>Send messages using C#</h2>
<p>
The C# code snippet below shows how to send SMS Messages using our API. 
</p>

<p>
The code uses our C# gateway class: <strong>AfricasTalkingGateway.cs</strong> <span class="download_link">[<a href='/smslibraries/csharp'><i class="ti-download" ></i>  Download</a>]</span>
</p>

<p>
To help decode JSON responses, you will need to add a reference to <strong>System.Web.Extensions</strong> and <strong>System.Microsoft.CSharp</strong>
</p>

<ul>
<li><a href="#basic" data-toggle="tab">Sending a message</a></li>
<li><a href="#from" data-toggle="tab">Sending message using sender id or shortcode parameter</a></li>
<li><a href="#enqueue" data-toggle="tab">Enqueue messages</a></li>
<li><a href="#premium" data-toggle="tab">Sending premium rated (subscription) messages</a></li>
<li><a href="#ondemand" data-toggle="tab">Sending premium rated (onDemand) messages</a></li>
</ul>

<div class="tab-content">

<div class="tab-pane fade in active" id="basic">
<h3>Sending a Message</h3>
<fieldset style="width:98%" class='boxed code'>
<pre class="csharpCode">

using System;

class MainClass
{
	static public void Main (){
		
		// Specify your login credentials
		string username = "MyAfricasTalkingUsername";
		string apiKey   = "MyAfricasTalkingAPIKey"; 
		
		// Specify the numbers that you want to send to in a comma-separated list
		// Please ensure you include the country code (+254 for Kenya in this case)
		string recipients = "+254711XXXYYY,+254733YYYZZZ";

		// And of course we want our recipients to know what we really do
		string message = "I'm a lumberjack and its ok, I sleep all night and I work all day";
		
		// Create a new instance of our awesome gateway class
		AfricasTalkingGateway gateway = new AfricasTalkingGateway (username, apiKey);

		// Any gateway errors will be captured by our custom Exception class below,
		// so wrap the call in a try-catch block   
		try {

			// Thats it, hit send and we'll take care of the rest
			
			dynamic results = gateway.sendMessage (recipients, message);
			
			foreach( dynamic result  in results){
				Console.Write((string)result["number"] + ",");
				Console.Write((string)result["status"] + ",");
				Console.Write((string)result["messageId"] + ",");
				Console.WriteLine((string)result["cost"]);
			}
		} catch (AfricasTalkingGatewayException e) {

			Console.WriteLine ("Encountered an error: " + e.Message);		

		}
	}
}

</pre>
</fieldset>
</div>

<div class="tab-pane fade" id="from">
<h3>Sending messages: Use short code/Sender id</h3>
<fieldset style="width:98%" class='boxed code'>
<pre class="csharpCode">
// Sending Messages using sender id/short code
using System;

class MainClass
{
	static public void Main (){
		
		string username = "MyAfricasTalkingUsername";
		string apiKey   = "MyAfricasTalkingAPIKey"; 
		
		string recipients = "+254711XXXYYY,+254733XXXYYY";
		
		string message = "I'm a lumberjack and its ok, I sleep all night and I work all day";
		
		// Specify your AfricasTalking shortCode or sender id
		string from = "shortCode or senderId";
		
		AfricasTalkingGateway gateway = new AfricasTalkingGateway (username, apiKey);
		
		try {
			
			dynamic results = gateway.sendMessage (recipients, message, from);
			
			foreach( dynamic result  in results){
				Console.Write((string)result["number"] + ",");
				Console.Write((string)result["status"] + ",");
				Console.Write((string)result["messageId"] + ",");
				Console.WriteLine((string)result["cost"]);
			}
		} catch (AfricasTalkingGatewayException e) {

			Console.WriteLine ("Encountered an error: " + e.Message);		

		}
	}
}

</pre>
</fieldset>
</div>

<div class="tab-pane fade" id="enqueue">
<h3>Sending messages: Queue messages to be sent later</h3>
<fieldset style="width:98%" class='boxed code'>
<pre class="csharpCode">
//Message queueing 
using System;

class MainClass
{
	static public void Main (){
		
		string username = "MyAfricasTalkingUsername";
		string apiKey   = "MyAfricasTalkingAPIKey"; 
		
		string recipients = "+254711XXXYYY,+254733YYYZZZ";
		
		string message = "I'm a lumberjack and its ok, I sleep all night and I work all day";
		
		string from = null; //$from = "shortCode or senderId";
		
		int bulkSMSMode = 1; // This should always be 1 for bulk messages
		
		// enqueue flag is used to queue messages incase you are sending a high volume.
		// The default value is 0.
		Hashtable options = new Hashtable();
		options["enqueue"] = 1;
		
		AfricasTalkingGateway gateway = new AfricasTalkingGateway (username, apiKey);
		
		try {
			
			dynamic results = gateway.sendMessage (recipients, message, from, bulkSMSMode, options);
			
			foreach( dynamic result  in results){
				Console.Write((string)result["number"] + ",");
				Console.Write((string)result["status"] + ",");
				Console.Write((string)result["messageId"] + ",");
				Console.WriteLine((string)result["cost"]);
			}
		} catch (AfricasTalkingGatewayException e) {

			Console.WriteLine ("Encountered an error: " + e.Message);		

		}
	}
}

</pre>
</fieldset>
</div>

<div class="tab-pane fade" id="premium">
<h3>Sending premium rated (subscription) messages</h3>
<fieldset style="width:98%" class='boxed code'>
<pre class="csharpCode">
// Sending premium rated messages
using System;

class MainClass
{
	static public void Main (){
		
		string username = "MyAfricasTalkingUsername";
		string apiKey   = "MyAfricasTalkingAPIKey"; 
		
		string recipients = "+254711XXXYYY,+254733YYYZZZ";
		
		string message = "I'm a lumberjack and its ok, I sleep all night and I work all day";
		
		// Specify your premium shortCode and keyword
		string shortCode = "XXXXX";
		string keyword   = "premiumKeyword";
		
		// Set the bulkSMSMode flag to 0 so that the subscriber get charged
		int bulkSMSMode = 0;
		
		// Create an array which would hold the following parameters:
		// keyword: Your premium keyword,
		// retryDurationInHours: The numbers of hours our API should retry to send the message 
		// incase it doesn't go through. It is optional
		
		Hashtable options = new Hashtable();
		options["keyword"] = keyword;
		options["retryDurationInHours"] = No. of hours to retry sending message;
		
		AfricasTalkingGateway gateway = new AfricasTalkingGateway (username, apiKey);
		
		try {
			
			dynamic results = gateway.sendMessage (recipients, message, shortCode, bulkSMSMode, options);
			
			foreach( dynamic result  in results){
				Console.Write((string)result["number"] + ",");
				Console.Write((string)result["status"] + ",");
				Console.WriteLine((string)result["messageId"]);
			}
		} catch (AfricasTalkingGatewayException e) {

			Console.WriteLine ("Encountered an error: " + e.Message);		

		}
	}
}

</pre>
</fieldset>
</div>

<div class="tab-pane fade" id="ondemand">
<h3>Sending premium rated (onDemand) messages</h3>
<fieldset style="width:98%" class='boxed code'>
<pre class="csharpCode">
// Sending onDemand premium messages
using System;

class MainClass
{
	static public void Main (){
		
		string username = "MyAfricasTalkingUsername";
		string apiKey   = "MyAfricasTalkingAPIKey"; 
		
		string recipients = "+254711XXXYYY,+254733YYYZZZ";
		
		string message = "I'm a lumberjack and its ok, I sleep all night and I work all day";
		
		string shortCode = "XXXXX";
		string keyword   = "premiumKeyword"; // string keyword = null;
		
		int bulkSMSMode = 0;
		
		// Create a hashtable which would hold the following parameters keyword, retryDurationInHours and linkId:
		// linkId is received from the message sent by subscriber to your onDemand service
		string linkId = "messageLinkId";
		
		Hashtable options = new Hashtable();
		options["keyword"] = keyword;
		options["linkId"] = linkId;
		options["retryDurationInHours"] = No. of hours to retry sending message;
		
		AfricasTalkingGateway gateway = new AfricasTalkingGateway (username, apiKey);
		
		try {
			
			dynamic results = gateway.sendMessage (recipients, message, shortCode, bulkSMSMode, options);
			
			foreach( dynamic result  in results){
				Console.Write((string)result["number"] + ",");
				Console.Write((string)result["status"] + ",");
				Console.Write((string)result["messageId"] + ",");
			}
		} catch (AfricasTalkingGatewayException e) {

			Console.WriteLine ("Encountered an error: " + e.Message);		

		}
	}
}

</pre>
</fieldset>
</div>

</div>